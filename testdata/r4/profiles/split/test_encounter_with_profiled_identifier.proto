//    Copyright 2021 Google Inc.
//
//    Licensed under the Apache License, Version 2.0 (the "License");
//    you may not use this file except in compliance with the License.
//    You may obtain a copy of the License at
//
//        https://www.apache.org/licenses/LICENSE-2.0
//
//    Unless required by applicable law or agreed to in writing, software
//    distributed under the License is distributed on an "AS IS" BASIS,
//    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
//    See the License for the specific language governing permissions and
//    limitations under the License.

syntax = "proto3";

package google.fhir.r4.splittesting;

import "google/protobuf/any.proto";
import "proto/google/fhir/proto/annotations.proto";
import "proto/google/fhir/proto/r4/core/codes.proto";
import "proto/google/fhir/proto/r4/core/datatypes.proto";
import "testdata/r4/profiles/split/split_test_extensions.proto";

option java_multiple_files = true;
option java_package = "com.google.fhir.r4.splittesting";
option (.google.fhir.proto.fhir_version) = R4;

// Auto-generated from StructureDefinition for
// TestEncounterWithProfiledIdentifier. An interaction during which services are
// provided to the patient. See
// http://test/url/base/StructureDefinition/TestEncounterWithProfiledIdentifier
message TestEncounterWithProfiledIdentifier {
  option (.google.fhir.proto.structure_definition_kind) = KIND_RESOURCE;
  option (.google.fhir.proto.fhir_profile_base) =
      "http://hl7.org/fhir/StructureDefinition/Encounter";
  option (.google.fhir.proto.fhir_structure_definition_url) =
      "http://test/url/base/StructureDefinition/TestEncounterWithProfiledIdentifier";
  option (.google.fhir.proto.search_parameter) = {
    name: "account"
    type: REFERENCE
    expression: "Encounter.account"
  };
  option (.google.fhir.proto.search_parameter) = {
    name: "appointment"
    type: REFERENCE
    expression: "Encounter.appointment"
  };
  option (.google.fhir.proto.search_parameter) = {
    name: "based-on"
    type: REFERENCE
    expression: "Encounter.basedOn"
  };
  option (.google.fhir.proto.search_parameter) = {
    name: "class"
    type: TOKEN
    expression: "Encounter.class"
  };
  option (.google.fhir.proto.search_parameter) = {
    name: "date"
    type: DATE
    expression: "AllergyIntolerance.recordedDate | CarePlan.period | CareTeam.period | ClinicalImpression.date | Composition.date | Consent.dateTime | DiagnosticReport.effective | Encounter.period | EpisodeOfCare.period | FamilyMemberHistory.date | Flag.period | Immunization.occurrence | List.date | Observation.effective | Procedure.performed | (RiskAssessment.occurrence as dateTime) | SupplyRequest.authoredOn"
  };
  option (.google.fhir.proto.search_parameter) = {
    name: "diagnosis"
    type: REFERENCE
    expression: "Encounter.diagnosis.condition"
  };
  option (.google.fhir.proto.search_parameter) = {
    name: "episode-of-care"
    type: REFERENCE
    expression: "Encounter.episodeOfCare"
  };
  option (.google.fhir.proto.search_parameter) = {
    name: "identifier"
    type: TOKEN
    expression: "AllergyIntolerance.identifier | CarePlan.identifier | CareTeam.identifier | Composition.identifier | Condition.identifier | Consent.identifier | DetectedIssue.identifier | DeviceRequest.identifier | DiagnosticReport.identifier | DocumentManifest.masterIdentifier | DocumentManifest.identifier | DocumentReference.masterIdentifier | DocumentReference.identifier | Encounter.identifier | EpisodeOfCare.identifier | FamilyMemberHistory.identifier | Goal.identifier | ImagingStudy.identifier | Immunization.identifier | List.identifier | MedicationAdministration.identifier | MedicationDispense.identifier | MedicationRequest.identifier | MedicationStatement.identifier | NutritionOrder.identifier | Observation.identifier | Procedure.identifier | RiskAssessment.identifier | ServiceRequest.identifier | SupplyDelivery.identifier | SupplyRequest.identifier | VisionPrescription.identifier"
  };
  option (.google.fhir.proto.search_parameter) = {
    name: "length"
    type: QUANTITY
    expression: "Encounter.length"
  };
  option (.google.fhir.proto.search_parameter) = {
    name: "location"
    type: REFERENCE
    expression: "Encounter.location.location"
  };
  option (.google.fhir.proto.search_parameter) = {
    name: "location-period"
    type: DATE
    expression: "Encounter.location.period"
  };
  option (.google.fhir.proto.search_parameter) = {
    name: "part-of"
    type: REFERENCE
    expression: "Encounter.partOf"
  };
  option (.google.fhir.proto.search_parameter) = {
    name: "participant"
    type: REFERENCE
    expression: "Encounter.participant.individual"
  };
  option (.google.fhir.proto.search_parameter) = {
    name: "participant-type"
    type: TOKEN
    expression: "Encounter.participant.type"
  };
  option (.google.fhir.proto.search_parameter) = {
    name: "patient"
    type: REFERENCE
    expression: "AllergyIntolerance.patient | CarePlan.subject.where(resolve() is Patient) | CareTeam.subject.where(resolve() is Patient) | ClinicalImpression.subject.where(resolve() is Patient) | Composition.subject.where(resolve() is Patient) | Condition.subject.where(resolve() is Patient) | Consent.patient | DetectedIssue.patient | DeviceRequest.subject.where(resolve() is Patient) | DeviceUseStatement.subject | DiagnosticReport.subject.where(resolve() is Patient) | DocumentManifest.subject.where(resolve() is Patient) | DocumentReference.subject.where(resolve() is Patient) | Encounter.subject.where(resolve() is Patient) | EpisodeOfCare.patient | FamilyMemberHistory.patient | Flag.subject.where(resolve() is Patient) | Goal.subject.where(resolve() is Patient) | ImagingStudy.subject.where(resolve() is Patient) | Immunization.patient | List.subject.where(resolve() is Patient) | MedicationAdministration.subject.where(resolve() is Patient) | MedicationDispense.subject.where(resolve() is Patient) | MedicationRequest.subject.where(resolve() is Patient) | MedicationStatement.subject.where(resolve() is Patient) | NutritionOrder.patient | Observation.subject.where(resolve() is Patient) | Procedure.subject.where(resolve() is Patient) | RiskAssessment.subject.where(resolve() is Patient) | ServiceRequest.subject.where(resolve() is Patient) | SupplyDelivery.patient | VisionPrescription.patient"
  };
  option (.google.fhir.proto.search_parameter) = {
    name: "practitioner"
    type: REFERENCE
    expression: "Encounter.participant.individual.where(resolve() is Practitioner)"
  };
  option (.google.fhir.proto.search_parameter) = {
    name: "reason-code"
    type: TOKEN
    expression: "Encounter.reasonCode"
  };
  option (.google.fhir.proto.search_parameter) = {
    name: "reason-reference"
    type: REFERENCE
    expression: "Encounter.reasonReference"
  };
  option (.google.fhir.proto.search_parameter) = {
    name: "service-provider"
    type: REFERENCE
    expression: "Encounter.serviceProvider"
  };
  option (.google.fhir.proto.search_parameter) = {
    name: "special-arrangement"
    type: TOKEN
    expression: "Encounter.hospitalization.specialArrangement"
  };
  option (.google.fhir.proto.search_parameter) = {
    name: "status"
    type: TOKEN
    expression: "Encounter.status"
  };
  option (.google.fhir.proto.search_parameter) = {
    name: "subject"
    type: REFERENCE
    expression: "Encounter.subject"
  };
  option (.google.fhir.proto.search_parameter) = {
    name: "type"
    type: TOKEN
    expression: "AllergyIntolerance.type | Composition.type | DocumentManifest.type | DocumentReference.type | Encounter.type | EpisodeOfCare.type"
  };

  // Logical id of this artifact
  core.Id id = 1;

  // Metadata about the resource
  core.Meta meta = 2;

  // A set of rules under which this content was created
  core.Uri implicit_rules = 3;

  // Language of the resource content
  core.Code language = 4;

  // Text summary of the resource, for human interpretation
  core.Narrative text = 5;

  // Contained, inline Resources
  repeated protobuf.Any contained = 6;

  // Field 7 reserved for strongly-typed ContainedResource for id:
  // Encounter.contained
  reserved 7;

  // Additional content defined by implementations
  repeated core.Extension extension = 8;

  // Extensions that cannot be ignored
  repeated core.Extension modifier_extension = 9;

  // Identifier(s) by which this encounter is known
  message ProfiledIdentifier {
    option (.google.fhir.proto.structure_definition_kind) = KIND_COMPLEX_TYPE;
    option (.google.fhir.proto.fhir_profile_base) =
        "http://hl7.org/fhir/StructureDefinition/Identifier";

    // Unique id for inter-element referencing
    core.String id = 1;

    // Additional content defined by implementations
    repeated core.Extension extension = 2;

    // usual | official | temp | secondary | old (If known)
    message UseCode {
      option (.google.fhir.proto.structure_definition_kind) =
          KIND_PRIMITIVE_TYPE;
      option (.google.fhir.proto.fhir_valueset_url) =
          "http://hl7.org/fhir/ValueSet/identifier-use";
      option (.google.fhir.proto.fhir_profile_base) =
          "http://hl7.org/fhir/StructureDefinition/code";

      core.IdentifierUseCode.Value value = 1;

      core.String id = 2;

      repeated core.Extension extension = 3;
    }
    UseCode use = 3;

    // Description of identifier
    message CodeableConceptForType {
      option (.google.fhir.proto.fhir_profile_base) =
          "http://hl7.org/fhir/StructureDefinition/CodeableConcept";

      // Unique id for inter-element referencing
      core.String id = 1;

      // Additional content defined by implementations
      repeated core.Extension extension = 2;

      // Code defined by a terminology system
      repeated core.Coding coding = 3;

      // Plain text representation of the concept
      core.String text = 4;

      message ActCoding {
        option (.google.fhir.proto.fhir_profile_base) =
            "http://hl7.org/fhir/StructureDefinition/Coding";

        core.String id = 1;

        repeated core.Extension extension = 2;

        core.String version = 4;

        message FixedCode {
          option (.google.fhir.proto.structure_definition_kind) =
              KIND_PRIMITIVE_TYPE;
          option (.google.fhir.proto.fhir_profile_base) =
              "http://hl7.org/fhir/StructureDefinition/code";
          option (.google.fhir.proto.fhir_fixed_system) =
              "http://terminology.hl7.org/CodeSystem/v3-ActPriority";

          enum Value {
            option (.google.fhir.proto.fhir_code_system_url) =
                "http://terminology.hl7.org/CodeSystem/v3-ActPriority";

            INVALID_UNINITIALIZED = 0;
            A = 1 [(.google.fhir.proto.fhir_original_code) = "A"];
            CR = 2 [(.google.fhir.proto.fhir_original_code) = "CR"];
            CS = 3 [(.google.fhir.proto.fhir_original_code) = "CS"];
            CSP = 4 [(.google.fhir.proto.fhir_original_code) = "CSP"];
            CSR = 5 [(.google.fhir.proto.fhir_original_code) = "CSR"];
            EL = 6 [(.google.fhir.proto.fhir_original_code) = "EL"];
            EM = 7 [(.google.fhir.proto.fhir_original_code) = "EM"];
            P = 8 [(.google.fhir.proto.fhir_original_code) = "P"];
            PRN = 9 [(.google.fhir.proto.fhir_original_code) = "PRN"];
            R = 10 [(.google.fhir.proto.fhir_original_code) = "R"];
            RR = 11 [(.google.fhir.proto.fhir_original_code) = "RR"];
            S = 12 [(.google.fhir.proto.fhir_original_code) = "S"];
            T = 13 [(.google.fhir.proto.fhir_original_code) = "T"];
            UD = 14 [(.google.fhir.proto.fhir_original_code) = "UD"];
            UR = 15 [(.google.fhir.proto.fhir_original_code) = "UR"];
          }
          Value value = 1;

          core.String id = 2;

          repeated core.Extension extension = 3;
        }
        FixedCode code = 5;

        core.String display = 6;

        core.Boolean user_selected = 7;
      }
      ActCoding act = 5;
    }
    CodeableConceptForType type = 4;

    // The namespace for the identifier value
    core.Uri system = 5;

    // The value that is unique
    core.String value = 6;

    // Time period when id is/was valid for use
    core.Period period = 7;

    // Organization that issued id (may be just text)
    core.Reference assigner = 8
        [(.google.fhir.proto.valid_reference_type) = "Organization"];
  }
  repeated ProfiledIdentifier identifier = 10;

  // planned | arrived | triaged | in-progress | onleave | finished | cancelled
  // +
  message StatusCode {
    option (.google.fhir.proto.structure_definition_kind) = KIND_PRIMITIVE_TYPE;
    option (.google.fhir.proto.fhir_valueset_url) =
        "http://hl7.org/fhir/ValueSet/encounter-status";
    option (.google.fhir.proto.fhir_profile_base) =
        "http://hl7.org/fhir/StructureDefinition/code";

    core.EncounterStatusCode.Value value = 1;

    core.String id = 2;

    repeated core.Extension extension = 3;
  }
  StatusCode status = 11
      [(.google.fhir.proto.validation_requirement) = REQUIRED_BY_FHIR];

  // List of past encounter statuses
  message StatusHistory {
    // Unique id for inter-element referencing
    core.String id = 1;

    // Additional content defined by implementations
    repeated core.Extension extension = 2;

    // Extensions that cannot be ignored even if unrecognized
    repeated core.Extension modifier_extension = 3;

    // planned | arrived | triaged | in-progress | onleave | finished |
    // cancelled +
    message StatusCode {
      option (.google.fhir.proto.structure_definition_kind) =
          KIND_PRIMITIVE_TYPE;
      option (.google.fhir.proto.fhir_valueset_url) =
          "http://hl7.org/fhir/ValueSet/encounter-status";
      option (.google.fhir.proto.fhir_profile_base) =
          "http://hl7.org/fhir/StructureDefinition/code";

      core.EncounterStatusCode.Value value = 1;

      core.String id = 2;

      repeated core.Extension extension = 3;
    }
    StatusCode status = 4
        [(.google.fhir.proto.validation_requirement) = REQUIRED_BY_FHIR];

    // The time that the episode was in the specified status
    core.Period period = 5
        [(.google.fhir.proto.validation_requirement) = REQUIRED_BY_FHIR];
  }
  repeated StatusHistory status_history = 12;

  // Classification of patient encounter
  core.Coding class_value = 13 [
    (.google.fhir.proto.validation_requirement) = REQUIRED_BY_FHIR,
    json_name = "class"
  ];

  // List of past encounter classes
  message ClassHistory {
    // Unique id for inter-element referencing
    core.String id = 1;

    // Additional content defined by implementations
    repeated core.Extension extension = 2;

    // Extensions that cannot be ignored even if unrecognized
    repeated core.Extension modifier_extension = 3;

    // inpatient | outpatient | ambulatory | emergency +
    core.Coding class_value = 4 [
      (.google.fhir.proto.validation_requirement) = REQUIRED_BY_FHIR,
      json_name = "class"
    ];

    // The time that the episode was in the specified class
    core.Period period = 5
        [(.google.fhir.proto.validation_requirement) = REQUIRED_BY_FHIR];
  }
  repeated ClassHistory class_history = 14;

  // Specific type of encounter
  repeated core.CodeableConcept type = 15;

  // Specific type of service
  core.CodeableConcept service_type = 16;

  // Indicates the urgency of the encounter
  core.CodeableConcept priority = 17;

  // The patient or group present at the encounter
  core.Reference subject = 18 [
    (.google.fhir.proto.valid_reference_type) = "Patient",
    (.google.fhir.proto.valid_reference_type) = "Group"
  ];

  // Episode(s) of care that this encounter should be recorded against
  repeated core.Reference episode_of_care = 19
      [(.google.fhir.proto.valid_reference_type) = "EpisodeOfCare"];

  // The ServiceRequest that initiated this encounter
  repeated core.Reference based_on = 20
      [(.google.fhir.proto.valid_reference_type) = "ServiceRequest"];

  // List of participants involved in the encounter
  message Participant {
    // Unique id for inter-element referencing
    core.String id = 1;

    // Additional content defined by implementations
    repeated core.Extension extension = 2;

    // Extensions that cannot be ignored even if unrecognized
    repeated core.Extension modifier_extension = 3;

    // Role of participant in encounter
    repeated core.CodeableConcept type = 4;

    // Period of time during the encounter that the participant participated
    core.Period period = 5;

    // Persons involved in the encounter other than the patient
    core.Reference individual = 6 [
      (.google.fhir.proto.valid_reference_type) = "Practitioner",
      (.google.fhir.proto.valid_reference_type) = "PractitionerRole",
      (.google.fhir.proto.valid_reference_type) = "RelatedPerson"
    ];
  }
  repeated Participant participant = 21;

  // The appointment that scheduled this encounter
  repeated core.Reference appointment = 22
      [(.google.fhir.proto.valid_reference_type) = "Appointment"];

  // The start and end time of the encounter
  core.Period period = 23;

  // Quantity of time the encounter lasted (less time absent)
  core.Duration length = 24;

  // Coded reason the encounter takes place
  repeated core.CodeableConcept reason_code = 25;

  // Reason the encounter takes place (reference)
  repeated core.Reference reason_reference = 26 [
    (.google.fhir.proto.valid_reference_type) = "Condition",
    (.google.fhir.proto.valid_reference_type) = "Procedure",
    (.google.fhir.proto.valid_reference_type) = "Observation",
    (.google.fhir.proto.valid_reference_type) = "ImmunizationRecommendation"
  ];

  // The list of diagnosis relevant to this encounter
  message Diagnosis {
    // Unique id for inter-element referencing
    core.String id = 1;

    // Additional content defined by implementations
    repeated core.Extension extension = 2;

    // Extensions that cannot be ignored even if unrecognized
    repeated core.Extension modifier_extension = 3;

    // The diagnosis or procedure relevant to the encounter
    core.Reference condition = 4 [
      (.google.fhir.proto.validation_requirement) = REQUIRED_BY_FHIR,
      (.google.fhir.proto.valid_reference_type) = "Condition",
      (.google.fhir.proto.valid_reference_type) = "Procedure"
    ];

    // Role that this diagnosis has within the encounter (e.g. admission,
    // billing, discharge …)
    core.CodeableConcept use = 5;

    // Ranking of the diagnosis (for each role type)
    core.PositiveInt rank = 6;
  }
  repeated Diagnosis diagnosis = 27;

  // The set of accounts that may be used for billing for this Encounter
  repeated core.Reference account = 28
      [(.google.fhir.proto.valid_reference_type) = "Account"];

  // Details about the admission to a healthcare service
  message Hospitalization {
    // Unique id for inter-element referencing
    core.String id = 1;

    // Additional content defined by implementations
    repeated core.Extension extension = 2;

    // Extensions that cannot be ignored even if unrecognized
    repeated core.Extension modifier_extension = 3;

    // Pre-admission identifier
    core.Identifier pre_admission_identifier = 4;

    // The location/organization from which the patient came before admission
    core.Reference origin = 5 [
      (.google.fhir.proto.valid_reference_type) = "Location",
      (.google.fhir.proto.valid_reference_type) = "Organization"
    ];

    // From where patient was admitted (physician referral, transfer)
    core.CodeableConcept admit_source = 6;

    // The type of hospital re-admission that has occurred (if any). If the
    // value is absent, then this is not identified as a readmission
    core.CodeableConcept re_admission = 7;

    // Diet preferences reported by the patient
    repeated core.CodeableConcept diet_preference = 8;

    // Special courtesies (VIP, board member)
    repeated core.CodeableConcept special_courtesy = 9;

    // Wheelchair, translator, stretcher, etc.
    repeated core.CodeableConcept special_arrangement = 10;

    // Location/organization to which the patient is discharged
    core.Reference destination = 11 [
      (.google.fhir.proto.valid_reference_type) = "Location",
      (.google.fhir.proto.valid_reference_type) = "Organization"
    ];

    // Category or kind of location after discharge
    core.CodeableConcept discharge_disposition = 12;
  }
  Hospitalization hospitalization = 29;

  // List of locations where the patient has been
  message Location {
    // Unique id for inter-element referencing
    core.String id = 1;

    // Additional content defined by implementations
    repeated core.Extension extension = 2;

    // Extensions that cannot be ignored even if unrecognized
    repeated core.Extension modifier_extension = 3;

    // Location the encounter takes place
    core.Reference location = 4 [
      (.google.fhir.proto.validation_requirement) = REQUIRED_BY_FHIR,
      (.google.fhir.proto.valid_reference_type) = "Location"
    ];

    // planned | active | reserved | completed
    message StatusCode {
      option (.google.fhir.proto.structure_definition_kind) =
          KIND_PRIMITIVE_TYPE;
      option (.google.fhir.proto.fhir_valueset_url) =
          "http://hl7.org/fhir/ValueSet/encounter-location-status";
      option (.google.fhir.proto.fhir_profile_base) =
          "http://hl7.org/fhir/StructureDefinition/code";

      core.EncounterLocationStatusCode.Value value = 1;

      core.String id = 2;

      repeated core.Extension extension = 3;
    }
    StatusCode status = 5;

    // The physical type of the location (usually the level in the location
    // hierachy - bed room ward etc.)
    core.CodeableConcept physical_type = 6;

    // Time period during which the patient was present at the location
    core.Period period = 7;
  }
  repeated Location location = 30;

  // The organization (facility) responsible for this encounter
  core.Reference service_provider = 31
      [(.google.fhir.proto.valid_reference_type) = "Organization"];

  // Another Encounter this encounter is part of
  core.Reference part_of = 32
      [(.google.fhir.proto.valid_reference_type) = "Encounter"];
}
