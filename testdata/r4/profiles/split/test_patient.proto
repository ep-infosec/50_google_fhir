//    Copyright 2021 Google Inc.
//
//    Licensed under the Apache License, Version 2.0 (the "License");
//    you may not use this file except in compliance with the License.
//    You may obtain a copy of the License at
//
//        https://www.apache.org/licenses/LICENSE-2.0
//
//    Unless required by applicable law or agreed to in writing, software
//    distributed under the License is distributed on an "AS IS" BASIS,
//    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
//    See the License for the specific language governing permissions and
//    limitations under the License.

syntax = "proto3";

package google.fhir.r4.splittesting;

import "google/protobuf/any.proto";
import "proto/google/fhir/proto/annotations.proto";
import "proto/google/fhir/proto/r4/core/codes.proto";
import "proto/google/fhir/proto/r4/core/datatypes.proto";
import "testdata/r4/profiles/split/split_test_extensions.proto";

option java_multiple_files = true;
option java_package = "com.google.fhir.r4.splittesting";
option (.google.fhir.proto.fhir_version) = R4;

// Auto-generated from StructureDefinition for TestPatient.
// Information about an individual or animal receiving health care services.
// See http://test/url/base/StructureDefinition/TestPatient
message TestPatient {
  option (.google.fhir.proto.structure_definition_kind) = KIND_RESOURCE;
  option (.google.fhir.proto.fhir_profile_base) =
      "http://hl7.org/fhir/StructureDefinition/Patient";
  option (.google.fhir.proto.fhir_structure_definition_url) =
      "http://test/url/base/StructureDefinition/TestPatient";
  option (.google.fhir.proto.search_parameter) = {
    name: "Example Search Parameter on an extension"
    type: REFERENCE
    expression: "DocumentReference.extension('http://example.org/fhir/StructureDefinition/participation-agreement')"
  };
  option (.google.fhir.proto.search_parameter) = {
    name: "active"
    type: TOKEN
    expression: "Patient.active"
  };
  option (.google.fhir.proto.search_parameter) = {
    name: "address"
    type: STRING
    expression: "Patient.address | Person.address | Practitioner.address | RelatedPerson.address"
  };
  option (.google.fhir.proto.search_parameter) = {
    name: "address-city"
    type: STRING
    expression: "Patient.address.city | Person.address.city | Practitioner.address.city | RelatedPerson.address.city"
  };
  option (.google.fhir.proto.search_parameter) = {
    name: "address-country"
    type: STRING
    expression: "Patient.address.country | Person.address.country | Practitioner.address.country | RelatedPerson.address.country"
  };
  option (.google.fhir.proto.search_parameter) = {
    name: "address-postalcode"
    type: STRING
    expression: "Patient.address.postalCode | Person.address.postalCode | Practitioner.address.postalCode | RelatedPerson.address.postalCode"
  };
  option (.google.fhir.proto.search_parameter) = {
    name: "address-state"
    type: STRING
    expression: "Patient.address.state | Person.address.state | Practitioner.address.state | RelatedPerson.address.state"
  };
  option (.google.fhir.proto.search_parameter) = {
    name: "address-use"
    type: TOKEN
    expression: "Patient.address.use | Person.address.use | Practitioner.address.use | RelatedPerson.address.use"
  };
  option (.google.fhir.proto.search_parameter) = {
    name: "birthdate"
    type: DATE
    expression: "Patient.birthDate | Person.birthDate | RelatedPerson.birthDate"
  };
  option (.google.fhir.proto.search_parameter) = {
    name: "death-date"
    type: DATE
    expression: "(Patient.deceased as dateTime)"
  };
  option (.google.fhir.proto.search_parameter) = {
    name: "deceased"
    type: TOKEN
    expression: "Patient.deceased.exists() and Patient.deceased != false"
  };
  option (.google.fhir.proto.search_parameter) = {
    name: "email"
    type: TOKEN
    expression: "Patient.telecom.where(system='email') | Person.telecom.where(system='email') | Practitioner.telecom.where(system='email') | PractitionerRole.telecom.where(system='email') | RelatedPerson.telecom.where(system='email')"
  };
  option (.google.fhir.proto.search_parameter) = {
    name: "family"
    type: STRING
    expression: "Patient.name.family | Practitioner.name.family"
  };
  option (.google.fhir.proto.search_parameter) = {
    name: "gender"
    type: TOKEN
    expression: "Patient.gender | Person.gender | Practitioner.gender | RelatedPerson.gender"
  };
  option (.google.fhir.proto.search_parameter) = {
    name: "general-practitioner"
    type: REFERENCE
    expression: "Patient.generalPractitioner"
  };
  option (.google.fhir.proto.search_parameter) = {
    name: "given"
    type: STRING
    expression: "Patient.name.given | Practitioner.name.given"
  };
  option (.google.fhir.proto.search_parameter) = {
    name: "identifier"
    type: TOKEN
    expression: "Patient.identifier"
  };
  option (.google.fhir.proto.search_parameter) = {
    name: "language"
    type: TOKEN
    expression: "Patient.communication.language"
  };
  option (.google.fhir.proto.search_parameter) = {
    name: "link"
    type: REFERENCE
    expression: "Patient.link.other"
  };
  option (.google.fhir.proto.search_parameter) = {
    name: "name"
    type: STRING
    expression: "Patient.name"
  };
  option (.google.fhir.proto.search_parameter) = {
    name: "organization"
    type: REFERENCE
    expression: "Patient.managingOrganization"
  };
  option (.google.fhir.proto.search_parameter) = {
    name: "phone"
    type: TOKEN
    expression: "Patient.telecom.where(system='phone') | Person.telecom.where(system='phone') | Practitioner.telecom.where(system='phone') | PractitionerRole.telecom.where(system='phone') | RelatedPerson.telecom.where(system='phone')"
  };
  option (.google.fhir.proto.search_parameter) = {
    name: "phonetic"
    type: STRING
    expression: "Patient.name | Person.name | Practitioner.name | RelatedPerson.name"
  };
  option (.google.fhir.proto.search_parameter) = {
    name: "telecom"
    type: TOKEN
    expression: "Patient.telecom | Person.telecom | Practitioner.telecom | PractitionerRole.telecom | RelatedPerson.telecom"
  };

  // Logical id of this artifact
  core.Id id = 1;

  // Metadata about the resource
  core.Meta meta = 2;

  // A set of rules under which this content was created
  core.Uri implicit_rules = 3;

  // Language of the resource content
  core.Code language = 4;

  // Text summary of the resource, for human interpretation
  core.Narrative text = 5;

  // Contained, inline Resources
  repeated protobuf.Any contained = 6;

  // Field 7 reserved for strongly-typed ContainedResource for id:
  // Patient.contained
  reserved 7;

  // Additional content defined by implementations
  repeated core.Extension extension = 8;

  // Extensions that cannot be ignored
  repeated core.Extension modifier_extension = 9;

  // An identifier for this patient
  repeated core.Identifier identifier = 10;

  // Whether this patient's record is in active use
  core.Boolean active = 11;

  // A name associated with the patient
  core.HumanName name = 12
      [(.google.fhir.proto.validation_requirement) = REQUIRED_BY_FHIR];

  // A contact detail for the individual
  repeated core.ContactPoint telecom = 13;

  // male | female | other | unknown
  message GenderCode {
    option (.google.fhir.proto.structure_definition_kind) = KIND_PRIMITIVE_TYPE;
    option (.google.fhir.proto.fhir_valueset_url) =
        "http://hl7.org/fhir/ValueSet/administrative-gender";
    option (.google.fhir.proto.fhir_profile_base) =
        "http://hl7.org/fhir/StructureDefinition/code";

    core.AdministrativeGenderCode.Value value = 1;

    core.String id = 2;

    repeated core.Extension extension = 3;
  }
  GenderCode gender = 14;

  // The date of birth for the individual
  core.Date birth_date = 15;

  // Indicates if the individual is deceased or not
  message DeceasedX {
    option (.google.fhir.proto.is_choice_type) = true;

    oneof choice {
      core.Boolean boolean = 1;
      core.DateTime date_time = 2;
    }
  }
  DeceasedX deceased = 16;

  // An address for the individual
  repeated core.Address address = 17 [
    (.google.fhir.proto.fhir_path_constraint) =
        "city.exists() implies state.exists()",
    (.google.fhir.proto.fhir_path_warning_constraint) =
        "postalCode.length() >= 5"
  ];

  // Marital (civil) status of a patient
  message CodeableConceptForMaritalStatus {
    option (.google.fhir.proto.fhir_profile_base) =
        "http://hl7.org/fhir/StructureDefinition/CodeableConcept";

    // Unique id for inter-element referencing
    core.String id = 1;

    // Additional content defined by implementations
    repeated core.Extension extension = 2;

    // Code defined by a terminology system
    repeated core.Coding coding = 3;

    // Plain text representation of the concept
    core.String text = 4;

    message ColorCoding {
      option (.google.fhir.proto.fhir_profile_base) =
          "http://hl7.org/fhir/StructureDefinition/Coding";

      core.String id = 1;

      repeated core.Extension extension = 2;

      core.String version = 4;

      message FixedCode {
        option (.google.fhir.proto.structure_definition_kind) =
            KIND_PRIMITIVE_TYPE;
        option (.google.fhir.proto.fhir_profile_base) =
            "http://hl7.org/fhir/StructureDefinition/code";
        option (.google.fhir.proto.fhir_fixed_system) =
            "http://hl7.org/fhir/metric-color";

        core.DeviceMetricColorCode.Value value = 1;

        core.String id = 2;

        repeated core.Extension extension = 3;
      }
      FixedCode code = 5;

      core.String display = 6;

      core.Boolean user_selected = 7;
    }
    ColorCoding color = 5;
  }
  CodeableConceptForMaritalStatus marital_status = 18;

  // Whether patient is part of a multiple birth
  message MultipleBirthX {
    option (.google.fhir.proto.is_choice_type) = true;

    oneof choice {
      core.Boolean boolean = 1;
      core.Integer integer = 2;
    }
  }
  MultipleBirthX multiple_birth = 19;

  // Image of the patient
  repeated core.Attachment photo = 20;

  // A contact party (e.g. guardian, partner, friend) for the patient
  message Contact {
    option (.google.fhir.proto.fhir_path_message_constraint) =
        "name.exists() or telecom.exists() or address.exists() or organization.exists()";

    // Unique id for inter-element referencing
    core.String id = 1;

    // Additional content defined by implementations
    repeated core.Extension extension = 2;

    // Extensions that cannot be ignored even if unrecognized
    repeated core.Extension modifier_extension = 3;

    // The kind of relationship
    repeated core.CodeableConcept relationship = 4;

    // A name associated with the contact person
    core.HumanName name = 5;

    // A contact detail for the person
    repeated core.ContactPoint telecom = 6;

    // Address for the contact person
    core.Address address = 7;

    // male | female | other | unknown
    message GenderCode {
      option (.google.fhir.proto.structure_definition_kind) =
          KIND_PRIMITIVE_TYPE;
      option (.google.fhir.proto.fhir_valueset_url) =
          "http://hl7.org/fhir/ValueSet/administrative-gender";
      option (.google.fhir.proto.fhir_profile_base) =
          "http://hl7.org/fhir/StructureDefinition/code";

      core.AdministrativeGenderCode.Value value = 1;

      core.String id = 2;

      repeated core.Extension extension = 3;
    }
    GenderCode gender = 8;

    // Organization that is associated with the contact
    core.Reference organization = 9
        [(.google.fhir.proto.valid_reference_type) = "Organization"];

    // The period during which this contact person or organization is valid to
    // be contacted relating to this patient
    core.Period period = 10;
  }
  repeated Contact contact = 21;

  // A language which may be used to communicate with the patient about his or
  // her health
  message Communication {
    // Unique id for inter-element referencing
    core.String id = 1;

    // Additional content defined by implementations
    repeated core.Extension extension = 2;

    // Extensions that cannot be ignored even if unrecognized
    repeated core.Extension modifier_extension = 3;

    // The language which can be used to communicate with the patient about his
    // or her health
    core.CodeableConcept language = 4
        [(.google.fhir.proto.validation_requirement) = REQUIRED_BY_FHIR];

    // Language preference indicator
    core.Boolean preferred = 5;
  }
  repeated Communication communication = 22;

  // Patient's nominated primary care provider
  repeated core.Reference general_practitioner = 23 [
    (.google.fhir.proto.valid_reference_type) = "Organization",
    (.google.fhir.proto.valid_reference_type) = "Practitioner",
    (.google.fhir.proto.valid_reference_type) = "PractitionerRole"
  ];

  // Organization that is the custodian of the patient record
  core.Reference managing_organization = 24
      [(.google.fhir.proto.valid_reference_type) = "Organization"];

  // Link to another patient resource that concerns the same actual person
  message Link {
    // Unique id for inter-element referencing
    core.String id = 1;

    // Additional content defined by implementations
    repeated core.Extension extension = 2;

    // Extensions that cannot be ignored even if unrecognized
    repeated core.Extension modifier_extension = 3;

    // The other patient or related person resource that the link refers to
    core.Reference other = 4 [
      (.google.fhir.proto.validation_requirement) = REQUIRED_BY_FHIR,
      (.google.fhir.proto.valid_reference_type) = "Patient",
      (.google.fhir.proto.valid_reference_type) = "RelatedPerson"
    ];

    // replaced-by | replaces | refer | seealso
    message TypeCode {
      option (.google.fhir.proto.structure_definition_kind) =
          KIND_PRIMITIVE_TYPE;
      option (.google.fhir.proto.fhir_valueset_url) =
          "http://hl7.org/fhir/ValueSet/link-type";
      option (.google.fhir.proto.fhir_profile_base) =
          "http://hl7.org/fhir/StructureDefinition/code";

      core.LinkTypeCode.Value value = 1;

      core.String id = 2;

      repeated core.Extension extension = 3;
    }
    TypeCode type = 5
        [(.google.fhir.proto.validation_requirement) = REQUIRED_BY_FHIR];
  }
  repeated Link link = 25;

  // Decimal Extension
  core.Decimal dec_ext = 26 [
    (.google.fhir.proto.validation_requirement) = REQUIRED_BY_FHIR,
    (.google.fhir.proto.fhir_inlined_extension_url) =
        "http://test/url/base/StructureDefinition/SimpleDecimalExt"
  ];

  // Optional Extensions Element
  FavoriteBrewery.ValueCode favorite_brewery = 27
      [(.google.fhir.proto.fhir_inlined_extension_url) =
           "http://test/url/base/StructureDefinition/FavoriteBrewery"];

  // Optional Extensions Element
  FavoriteCalifornian.ValueCode favorite_californian = 28
      [(.google.fhir.proto.fhir_inlined_extension_url) =
           "http://test/url/base/StructureDefinition/FavoriteCalifornian"];
}
