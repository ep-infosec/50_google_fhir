//    Copyright 2019 Google Inc.
//
//    Licensed under the Apache License, Version 2.0 (the "License");
//    you may not use this file except in compliance with the License.
//    You may obtain a copy of the License at
//
//        https://www.apache.org/licenses/LICENSE-2.0
//
//    Unless required by applicable law or agreed to in writing, software
//    distributed under the License is distributed on an "AS IS" BASIS,
//    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
//    See the License for the specific language governing permissions and
//    limitations under the License.

syntax = "proto3";

package google.fhir.r4.core;

import "google/protobuf/any.proto";
import "proto/google/fhir/proto/annotations.proto";
import "proto/google/fhir/proto/r4/core/codes.proto";
import "proto/google/fhir/proto/r4/core/datatypes.proto";

option java_multiple_files = true;
option java_package = "com.google.fhir.r4.core";
option (.google.fhir.proto.fhir_version) = R4;

// Auto-generated from StructureDefinition for RelatedPerson.
// A person that is related to a patient, but who is not a direct target of
// care. See http://hl7.org/fhir/StructureDefinition/RelatedPerson
message RelatedPerson {
  option (.google.fhir.proto.structure_definition_kind) = KIND_RESOURCE;
  option (.google.fhir.proto.fhir_structure_definition_url) =
      "http://hl7.org/fhir/StructureDefinition/RelatedPerson";
  option (.google.fhir.proto.search_parameter) = {
    name: "active"
    type: TOKEN
    expression: "RelatedPerson.active"
  };
  option (.google.fhir.proto.search_parameter) = {
    name: "address"
    type: STRING
    expression: "Patient.address | Person.address | Practitioner.address | RelatedPerson.address"
  };
  option (.google.fhir.proto.search_parameter) = {
    name: "address-city"
    type: STRING
    expression: "Patient.address.city | Person.address.city | Practitioner.address.city | RelatedPerson.address.city"
  };
  option (.google.fhir.proto.search_parameter) = {
    name: "address-country"
    type: STRING
    expression: "Patient.address.country | Person.address.country | Practitioner.address.country | RelatedPerson.address.country"
  };
  option (.google.fhir.proto.search_parameter) = {
    name: "address-postalcode"
    type: STRING
    expression: "Patient.address.postalCode | Person.address.postalCode | Practitioner.address.postalCode | RelatedPerson.address.postalCode"
  };
  option (.google.fhir.proto.search_parameter) = {
    name: "address-state"
    type: STRING
    expression: "Patient.address.state | Person.address.state | Practitioner.address.state | RelatedPerson.address.state"
  };
  option (.google.fhir.proto.search_parameter) = {
    name: "address-use"
    type: TOKEN
    expression: "Patient.address.use | Person.address.use | Practitioner.address.use | RelatedPerson.address.use"
  };
  option (.google.fhir.proto.search_parameter) = {
    name: "birthdate"
    type: DATE
    expression: "Patient.birthDate | Person.birthDate | RelatedPerson.birthDate"
  };
  option (.google.fhir.proto.search_parameter) = {
    name: "email"
    type: TOKEN
    expression: "Patient.telecom.where(system='email') | Person.telecom.where(system='email') | Practitioner.telecom.where(system='email') | PractitionerRole.telecom.where(system='email') | RelatedPerson.telecom.where(system='email')"
  };
  option (.google.fhir.proto.search_parameter) = {
    name: "gender"
    type: TOKEN
    expression: "Patient.gender | Person.gender | Practitioner.gender | RelatedPerson.gender"
  };
  option (.google.fhir.proto.search_parameter) = {
    name: "identifier"
    type: TOKEN
    expression: "RelatedPerson.identifier"
  };
  option (.google.fhir.proto.search_parameter) = {
    name: "name"
    type: STRING
    expression: "RelatedPerson.name"
  };
  option (.google.fhir.proto.search_parameter) = {
    name: "patient"
    type: REFERENCE
    expression: "RelatedPerson.patient"
  };
  option (.google.fhir.proto.search_parameter) = {
    name: "phone"
    type: TOKEN
    expression: "Patient.telecom.where(system='phone') | Person.telecom.where(system='phone') | Practitioner.telecom.where(system='phone') | PractitionerRole.telecom.where(system='phone') | RelatedPerson.telecom.where(system='phone')"
  };
  option (.google.fhir.proto.search_parameter) = {
    name: "phonetic"
    type: STRING
    expression: "Patient.name | Person.name | Practitioner.name | RelatedPerson.name"
  };
  option (.google.fhir.proto.search_parameter) = {
    name: "relationship"
    type: TOKEN
    expression: "RelatedPerson.relationship"
  };
  option (.google.fhir.proto.search_parameter) = {
    name: "telecom"
    type: TOKEN
    expression: "Patient.telecom | Person.telecom | Practitioner.telecom | PractitionerRole.telecom | RelatedPerson.telecom"
  };

  // Logical id of this artifact
  Id id = 1;

  // Metadata about the resource
  Meta meta = 2;

  // A set of rules under which this content was created
  Uri implicit_rules = 3;

  // Language of the resource content
  Code language = 4;

  // Text summary of the resource, for human interpretation
  Narrative text = 5;

  // Contained, inline Resources
  repeated protobuf.Any contained = 6;

  // Field 7 reserved for strongly-typed ContainedResource for id:
  // RelatedPerson.contained
  reserved 7;

  // Additional content defined by implementations
  repeated Extension extension = 8;

  // Extensions that cannot be ignored
  repeated Extension modifier_extension = 9;

  // A human identifier for this person
  repeated Identifier identifier = 10;

  // Whether this related person's record is in active use
  Boolean active = 11;

  // The patient this person is related to
  Reference patient = 12 [
    (.google.fhir.proto.validation_requirement) = REQUIRED_BY_FHIR,
    (.google.fhir.proto.valid_reference_type) = "Patient"
  ];

  // The nature of the relationship
  repeated CodeableConcept relationship = 13;

  // A name associated with the person
  repeated HumanName name = 14;

  // A contact detail for the person
  repeated ContactPoint telecom = 15;

  // male | female | other | unknown
  message GenderCode {
    option (.google.fhir.proto.structure_definition_kind) = KIND_PRIMITIVE_TYPE;
    option (.google.fhir.proto.fhir_valueset_url) =
        "http://hl7.org/fhir/ValueSet/administrative-gender";
    option (.google.fhir.proto.fhir_profile_base) =
        "http://hl7.org/fhir/StructureDefinition/code";

    AdministrativeGenderCode.Value value = 1;

    String id = 2;

    repeated Extension extension = 3;
  }
  GenderCode gender = 16;

  // The date on which the related person was born
  Date birth_date = 17;

  // Address where the related person can be contacted or visited
  repeated Address address = 18;

  // Image of the person
  repeated Attachment photo = 19;

  // Period of time that this relationship is considered valid
  Period period = 20;

  // A language which may be used to communicate with about the patient's health
  message Communication {
    // Unique id for inter-element referencing
    String id = 1;

    // Additional content defined by implementations
    repeated Extension extension = 2;

    // Extensions that cannot be ignored even if unrecognized
    repeated Extension modifier_extension = 3;

    // The language which can be used to communicate with the patient about his
    // or her health
    CodeableConcept language = 4
        [(.google.fhir.proto.validation_requirement) = REQUIRED_BY_FHIR];

    // Language preference indicator
    Boolean preferred = 5;
  }
  repeated Communication communication = 21;
}
