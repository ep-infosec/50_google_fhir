//    Copyright 2019 Google Inc.
//
//    Licensed under the Apache License, Version 2.0 (the "License");
//    you may not use this file except in compliance with the License.
//    You may obtain a copy of the License at
//
//        https://www.apache.org/licenses/LICENSE-2.0
//
//    Unless required by applicable law or agreed to in writing, software
//    distributed under the License is distributed on an "AS IS" BASIS,
//    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
//    See the License for the specific language governing permissions and
//    limitations under the License.

syntax = "proto3";

package google.fhir.r4.core;

import "google/protobuf/any.proto";
import "proto/google/fhir/proto/annotations.proto";
import "proto/google/fhir/proto/r4/core/codes.proto";
import "proto/google/fhir/proto/r4/core/datatypes.proto";

option java_multiple_files = true;
option java_package = "com.google.fhir.r4.core";
option (.google.fhir.proto.fhir_version) = R4;

// Auto-generated from StructureDefinition for StructureDefinition.
// Structural Definition.
// See http://hl7.org/fhir/StructureDefinition/StructureDefinition
message StructureDefinition {
  option (.google.fhir.proto.structure_definition_kind) = KIND_RESOURCE;
  option (.google.fhir.proto.fhir_structure_definition_url) =
      "http://hl7.org/fhir/StructureDefinition/StructureDefinition";
  option (.google.fhir.proto.fhir_path_message_constraint) =
      "derivation = 'constraint' or snapshot.element.select(path).isDistinct()";
  option (.google.fhir.proto.fhir_path_message_constraint) =
      "(kind!='logical'  and differential.element.first().path.contains('.').not()) implies differential.element.first().type.empty()";
  option (.google.fhir.proto.fhir_path_message_constraint) =
      "abstract = true or baseDefinition.exists()";
  option (.google.fhir.proto.fhir_path_message_constraint) =
      "type != 'Extension' or derivation = 'specialization' or (context.exists())";
  option (.google.fhir.proto.fhir_path_message_constraint) =
      "snapshot.exists() or differential.exists()";
  option (.google.fhir.proto.fhir_path_message_constraint) =
      "children().element.where(path.contains('.').not()).label.empty() and children().element.where(path.contains('.').not()).code.empty() and children().element.where(path.contains('.').not()).requirements.empty()";
  option (.google.fhir.proto.fhir_path_message_constraint) =
      "kind != 'logical' implies snapshot.empty() or snapshot.element.first().path = type";
  option (.google.fhir.proto.fhir_path_message_constraint) =
      "snapshot.element.all(id.exists()) and differential.element.all(id.exists())";
  option (.google.fhir.proto.fhir_path_message_constraint) =
      "kind!='logical' implies snapshot.element.first().type.empty()";
  option (.google.fhir.proto.fhir_path_message_constraint) =
      "snapshot.element.all(id.exists()) and snapshot.element.id.trace('ids').isDistinct()";
  option (.google.fhir.proto.fhir_path_message_constraint) =
      "differential.element.all(id.exists()) and differential.element.id.trace('ids').isDistinct()";
  option (.google.fhir.proto.fhir_path_message_constraint) =
      "contextInvariant.exists() implies type = 'Extension'";
  option (.google.fhir.proto.fhir_path_message_constraint) =
      "url.startsWith('http://hl7.org/fhir/StructureDefinition') implies (differential.element.type.code.all(matches('^[a-zA-Z0-9]+$') or matches('^http:\\\\/\\\\/hl7\\\\.org\\\\/fhirpath\\\\/System\\\\.[A-Z][A-Za-z]+$')) and snapshot.element.type.code.all(matches('^[a-zA-Z0-9\\\\.]+$') or matches('^http:\\\\/\\\\/hl7\\\\.org\\\\/fhirpath\\\\/System\\\\.[A-Z][A-Za-z]+$')))";
  option (.google.fhir.proto.fhir_path_message_constraint) =
      "differential.element.defaultValue.exists() implies (derivation = 'specialization')";
  option (.google.fhir.proto.fhir_path_message_constraint) =
      "url.startsWith('http://hl7.org/fhir/StructureDefinition') implies (snapshot.element.defaultValue.empty() and differential.element.defaultValue.empty())";
  option (.google.fhir.proto.fhir_path_message_constraint) =
      "(snapshot | differential).element.all(path.contains('.').not() implies sliceName.empty())";
  option (.google.fhir.proto.fhir_path_message_warning_constraint) =
      "name.matches('[A-Z]([A-Za-z0-9_]){0,254}')";
  option (.google.fhir.proto.search_parameter) = {
    name: "abstract"
    type: TOKEN
    expression: "StructureDefinition.abstract"
  };
  option (.google.fhir.proto.search_parameter) = {
    name: "base"
    type: REFERENCE
    expression: "StructureDefinition.baseDefinition"
  };
  option (.google.fhir.proto.search_parameter) = {
    name: "base-path"
    type: TOKEN
    expression: "StructureDefinition.snapshot.element.base.path | StructureDefinition.differential.element.base.path"
  };
  option (.google.fhir.proto.search_parameter) = {
    name: "context"
    type: TOKEN
    expression: "(CapabilityStatement.useContext.value as CodeableConcept) | (CodeSystem.useContext.value as CodeableConcept) | (CompartmentDefinition.useContext.value as CodeableConcept) | (ConceptMap.useContext.value as CodeableConcept) | (GraphDefinition.useContext.value as CodeableConcept) | (ImplementationGuide.useContext.value as CodeableConcept) | (MessageDefinition.useContext.value as CodeableConcept) | (NamingSystem.useContext.value as CodeableConcept) | (OperationDefinition.useContext.value as CodeableConcept) | (SearchParameter.useContext.value as CodeableConcept) | (StructureDefinition.useContext.value as CodeableConcept) | (StructureMap.useContext.value as CodeableConcept) | (TerminologyCapabilities.useContext.value as CodeableConcept) | (ValueSet.useContext.value as CodeableConcept)"
  };
  option (.google.fhir.proto.search_parameter) = {
    name: "context-quantity"
    type: QUANTITY
    expression: "(CapabilityStatement.useContext.value as Quantity) | (CapabilityStatement.useContext.value as Range) | (CodeSystem.useContext.value as Quantity) | (CodeSystem.useContext.value as Range) | (CompartmentDefinition.useContext.value as Quantity) | (CompartmentDefinition.useContext.value as Range) | (ConceptMap.useContext.value as Quantity) | (ConceptMap.useContext.value as Range) | (GraphDefinition.useContext.value as Quantity) | (GraphDefinition.useContext.value as Range) | (ImplementationGuide.useContext.value as Quantity) | (ImplementationGuide.useContext.value as Range) | (MessageDefinition.useContext.value as Quantity) | (MessageDefinition.useContext.value as Range) | (NamingSystem.useContext.value as Quantity) | (NamingSystem.useContext.value as Range) | (OperationDefinition.useContext.value as Quantity) | (OperationDefinition.useContext.value as Range) | (SearchParameter.useContext.value as Quantity) | (SearchParameter.useContext.value as Range) | (StructureDefinition.useContext.value as Quantity) | (StructureDefinition.useContext.value as Range) | (StructureMap.useContext.value as Quantity) | (StructureMap.useContext.value as Range) | (TerminologyCapabilities.useContext.value as Quantity) | (TerminologyCapabilities.useContext.value as Range) | (ValueSet.useContext.value as Quantity) | (ValueSet.useContext.value as Range)"
  };
  option (.google.fhir.proto.search_parameter) = {
    name: "context-type"
    type: TOKEN
    expression: "CapabilityStatement.useContext.code | CodeSystem.useContext.code | CompartmentDefinition.useContext.code | ConceptMap.useContext.code | GraphDefinition.useContext.code | ImplementationGuide.useContext.code | MessageDefinition.useContext.code | NamingSystem.useContext.code | OperationDefinition.useContext.code | SearchParameter.useContext.code | StructureDefinition.useContext.code | StructureMap.useContext.code | TerminologyCapabilities.useContext.code | ValueSet.useContext.code"
  };
  option (.google.fhir.proto.search_parameter) = {
    name: "context-type-quantity"
    type: COMPOSITE
    expression: "CapabilityStatement.useContext | CodeSystem.useContext | CompartmentDefinition.useContext | ConceptMap.useContext | GraphDefinition.useContext | ImplementationGuide.useContext | MessageDefinition.useContext | NamingSystem.useContext | OperationDefinition.useContext | SearchParameter.useContext | StructureDefinition.useContext | StructureMap.useContext | TerminologyCapabilities.useContext | ValueSet.useContext"
  };
  option (.google.fhir.proto.search_parameter) = {
    name: "context-type-value"
    type: COMPOSITE
    expression: "CapabilityStatement.useContext | CodeSystem.useContext | CompartmentDefinition.useContext | ConceptMap.useContext | GraphDefinition.useContext | ImplementationGuide.useContext | MessageDefinition.useContext | NamingSystem.useContext | OperationDefinition.useContext | SearchParameter.useContext | StructureDefinition.useContext | StructureMap.useContext | TerminologyCapabilities.useContext | ValueSet.useContext"
  };
  option (.google.fhir.proto.search_parameter) = {
    name: "date"
    type: DATE
    expression: "CapabilityStatement.date | CodeSystem.date | CompartmentDefinition.date | ConceptMap.date | GraphDefinition.date | ImplementationGuide.date | MessageDefinition.date | NamingSystem.date | OperationDefinition.date | SearchParameter.date | StructureDefinition.date | StructureMap.date | TerminologyCapabilities.date | ValueSet.date"
  };
  option (.google.fhir.proto.search_parameter) = {
    name: "derivation"
    type: TOKEN
    expression: "StructureDefinition.derivation"
  };
  option (.google.fhir.proto.search_parameter) = {
    name: "description"
    type: STRING
    expression: "CapabilityStatement.description | CodeSystem.description | CompartmentDefinition.description | ConceptMap.description | GraphDefinition.description | ImplementationGuide.description | MessageDefinition.description | NamingSystem.description | OperationDefinition.description | SearchParameter.description | StructureDefinition.description | StructureMap.description | TerminologyCapabilities.description | ValueSet.description"
  };
  option (.google.fhir.proto.search_parameter) = {
    name: "experimental"
    type: TOKEN
    expression: "StructureDefinition.experimental"
  };
  option (.google.fhir.proto.search_parameter) = {
    name: "ext-context"
    type: TOKEN
    expression: "StructureDefinition.context.type"
  };
  option (.google.fhir.proto.search_parameter) = {
    name: "identifier"
    type: TOKEN
    expression: "CodeSystem.identifier | ConceptMap.identifier | MessageDefinition.identifier | StructureDefinition.identifier | StructureMap.identifier | ValueSet.identifier"
  };
  option (.google.fhir.proto.search_parameter) = {
    name: "jurisdiction"
    type: TOKEN
    expression: "CapabilityStatement.jurisdiction | CodeSystem.jurisdiction | ConceptMap.jurisdiction | GraphDefinition.jurisdiction | ImplementationGuide.jurisdiction | MessageDefinition.jurisdiction | NamingSystem.jurisdiction | OperationDefinition.jurisdiction | SearchParameter.jurisdiction | StructureDefinition.jurisdiction | StructureMap.jurisdiction | TerminologyCapabilities.jurisdiction | ValueSet.jurisdiction"
  };
  option (.google.fhir.proto.search_parameter) = {
    name: "keyword"
    type: TOKEN
    expression: "StructureDefinition.keyword"
  };
  option (.google.fhir.proto.search_parameter) = {
    name: "kind"
    type: TOKEN
    expression: "StructureDefinition.kind"
  };
  option (.google.fhir.proto.search_parameter) = {
    name: "name"
    type: STRING
    expression: "CapabilityStatement.name | CodeSystem.name | CompartmentDefinition.name | ConceptMap.name | GraphDefinition.name | ImplementationGuide.name | MessageDefinition.name | NamingSystem.name | OperationDefinition.name | SearchParameter.name | StructureDefinition.name | StructureMap.name | TerminologyCapabilities.name | ValueSet.name"
  };
  option (.google.fhir.proto.search_parameter) = {
    name: "path"
    type: TOKEN
    expression: "StructureDefinition.snapshot.element.path | StructureDefinition.differential.element.path"
  };
  option (.google.fhir.proto.search_parameter) = {
    name: "publisher"
    type: STRING
    expression: "CapabilityStatement.publisher | CodeSystem.publisher | CompartmentDefinition.publisher | ConceptMap.publisher | GraphDefinition.publisher | ImplementationGuide.publisher | MessageDefinition.publisher | NamingSystem.publisher | OperationDefinition.publisher | SearchParameter.publisher | StructureDefinition.publisher | StructureMap.publisher | TerminologyCapabilities.publisher | ValueSet.publisher"
  };
  option (.google.fhir.proto.search_parameter) = {
    name: "status"
    type: TOKEN
    expression: "CapabilityStatement.status | CodeSystem.status | CompartmentDefinition.status | ConceptMap.status | GraphDefinition.status | ImplementationGuide.status | MessageDefinition.status | NamingSystem.status | OperationDefinition.status | SearchParameter.status | StructureDefinition.status | StructureMap.status | TerminologyCapabilities.status | ValueSet.status"
  };
  option (.google.fhir.proto.search_parameter) = {
    name: "title"
    type: STRING
    expression: "CapabilityStatement.title | CodeSystem.title | ConceptMap.title | ImplementationGuide.title | MessageDefinition.title | OperationDefinition.title | StructureDefinition.title | StructureMap.title | TerminologyCapabilities.title | ValueSet.title"
  };
  option (.google.fhir.proto.search_parameter) = {
    name: "type"
    type: URI
    expression: "StructureDefinition.type"
  };
  option (.google.fhir.proto.search_parameter) = {
    name: "url"
    type: URI
    expression: "CapabilityStatement.url | CodeSystem.url | CompartmentDefinition.url | ConceptMap.url | GraphDefinition.url | ImplementationGuide.url | MessageDefinition.url | OperationDefinition.url | SearchParameter.url | StructureDefinition.url | StructureMap.url | TerminologyCapabilities.url | ValueSet.url"
  };
  option (.google.fhir.proto.search_parameter) = {
    name: "valueset"
    type: REFERENCE
    expression: "StructureDefinition.snapshot.element.binding.valueSet"
  };
  option (.google.fhir.proto.search_parameter) = {
    name: "version"
    type: TOKEN
    expression: "CapabilityStatement.version | CodeSystem.version | CompartmentDefinition.version | ConceptMap.version | GraphDefinition.version | ImplementationGuide.version | MessageDefinition.version | OperationDefinition.version | SearchParameter.version | StructureDefinition.version | StructureMap.version | TerminologyCapabilities.version | ValueSet.version"
  };

  // Logical id of this artifact
  Id id = 1;

  // Metadata about the resource
  Meta meta = 2;

  // A set of rules under which this content was created
  Uri implicit_rules = 3;

  // Language of the resource content
  Code language = 4;

  // Text summary of the resource, for human interpretation
  Narrative text = 5;

  // Contained, inline Resources
  repeated protobuf.Any contained = 6;

  // Field 7 reserved for strongly-typed ContainedResource for id:
  // StructureDefinition.contained
  reserved 7;

  // Additional content defined by implementations
  repeated Extension extension = 8;

  // Extensions that cannot be ignored
  repeated Extension modifier_extension = 9;

  // Canonical identifier for this structure definition, represented as a URI
  // (globally unique)
  Uri url = 10 [(.google.fhir.proto.validation_requirement) = REQUIRED_BY_FHIR];

  // Additional identifier for the structure definition
  repeated Identifier identifier = 11;

  // Business version of the structure definition
  String version = 12;

  // Name for this structure definition (computer friendly)
  String name = 13
      [(.google.fhir.proto.validation_requirement) = REQUIRED_BY_FHIR];

  // Name for this structure definition (human friendly)
  String title = 14;

  // draft | active | retired | unknown
  message StatusCode {
    option (.google.fhir.proto.structure_definition_kind) = KIND_PRIMITIVE_TYPE;
    option (.google.fhir.proto.fhir_valueset_url) =
        "http://hl7.org/fhir/ValueSet/publication-status";
    option (.google.fhir.proto.fhir_profile_base) =
        "http://hl7.org/fhir/StructureDefinition/code";

    PublicationStatusCode.Value value = 1;

    String id = 2;

    repeated Extension extension = 3;
  }
  StatusCode status = 15
      [(.google.fhir.proto.validation_requirement) = REQUIRED_BY_FHIR];

  // For testing purposes, not real usage
  Boolean experimental = 16;

  // Date last changed
  DateTime date = 17;

  // Name of the publisher (organization or individual)
  String publisher = 18;

  // Contact details for the publisher
  repeated ContactDetail contact = 19;

  // Natural language description of the structure definition
  Markdown description = 20;

  // The context that the content is intended to support
  repeated UsageContext use_context = 21;

  // Intended jurisdiction for structure definition (if applicable)
  repeated CodeableConcept jurisdiction = 22;

  // Why this structure definition is defined
  Markdown purpose = 23;

  // Use and/or publishing restrictions
  Markdown copyright = 24;

  // Assist with indexing and finding
  repeated Coding keyword = 25;

  // FHIR Version this StructureDefinition targets
  message FhirVersionCode {
    option (.google.fhir.proto.structure_definition_kind) = KIND_PRIMITIVE_TYPE;
    option (.google.fhir.proto.fhir_valueset_url) =
        "http://hl7.org/fhir/ValueSet/FHIR-version";
    option (.google.fhir.proto.fhir_profile_base) =
        "http://hl7.org/fhir/StructureDefinition/code";

    FHIRVersionCode.Value value = 1;

    String id = 2;

    repeated Extension extension = 3;
  }
  FhirVersionCode fhir_version = 26;

  // External specification that the content is mapped to
  message Mapping {
    option (.google.fhir.proto.fhir_path_message_constraint) =
        "name.exists() or uri.exists()";

    // Unique id for inter-element referencing
    String id = 1;

    // Additional content defined by implementations
    repeated Extension extension = 2;

    // Extensions that cannot be ignored even if unrecognized
    repeated Extension modifier_extension = 3;

    // Internal id when this mapping is used
    Id identity = 4
        [(.google.fhir.proto.validation_requirement) = REQUIRED_BY_FHIR];

    // Identifies what this mapping refers to
    Uri uri = 5;

    // Names what this mapping refers to
    String name = 6;

    // Versions, Issues, Scope limitations etc.
    String comment = 7;
  }
  repeated Mapping mapping = 27;

  // primitive-type | complex-type | resource | logical
  message KindCode {
    option (.google.fhir.proto.structure_definition_kind) = KIND_PRIMITIVE_TYPE;
    option (.google.fhir.proto.fhir_valueset_url) =
        "http://hl7.org/fhir/ValueSet/structure-definition-kind";
    option (.google.fhir.proto.fhir_profile_base) =
        "http://hl7.org/fhir/StructureDefinition/code";

    StructureDefinitionKindCode.Value value = 1;

    String id = 2;

    repeated Extension extension = 3;
  }
  KindCode kind = 28
      [(.google.fhir.proto.validation_requirement) = REQUIRED_BY_FHIR];

  // Whether the structure is abstract
  Boolean abstract = 29
      [(.google.fhir.proto.validation_requirement) = REQUIRED_BY_FHIR];

  // If an extension, where it can be used in instances
  message Context {
    // Unique id for inter-element referencing
    String id = 1;

    // Additional content defined by implementations
    repeated Extension extension = 2;

    // Extensions that cannot be ignored even if unrecognized
    repeated Extension modifier_extension = 3;

    // fhirpath | element | extension
    message TypeCode {
      option (.google.fhir.proto.structure_definition_kind) =
          KIND_PRIMITIVE_TYPE;
      option (.google.fhir.proto.fhir_valueset_url) =
          "http://hl7.org/fhir/ValueSet/extension-context-type";
      option (.google.fhir.proto.fhir_profile_base) =
          "http://hl7.org/fhir/StructureDefinition/code";

      ExtensionContextTypeCode.Value value = 1;

      String id = 2;

      repeated Extension extension = 3;
    }
    TypeCode type = 4
        [(.google.fhir.proto.validation_requirement) = REQUIRED_BY_FHIR];

    // Where the extension can be used in instances
    String expression = 5
        [(.google.fhir.proto.validation_requirement) = REQUIRED_BY_FHIR];
  }
  repeated Context context = 30;

  // FHIRPath invariants - when the extension can be used
  repeated String context_invariant = 31;

  // Type defined or constrained by this structure
  Uri type = 32
      [(.google.fhir.proto.validation_requirement) = REQUIRED_BY_FHIR];

  // Definition that this type is constrained/specialized from
  Canonical base_definition = 33;

  // specialization | constraint - How relates to base definition
  message DerivationCode {
    option (.google.fhir.proto.structure_definition_kind) = KIND_PRIMITIVE_TYPE;
    option (.google.fhir.proto.fhir_valueset_url) =
        "http://hl7.org/fhir/ValueSet/type-derivation-rule";
    option (.google.fhir.proto.fhir_profile_base) =
        "http://hl7.org/fhir/StructureDefinition/code";

    TypeDerivationRuleCode.Value value = 1;

    String id = 2;

    repeated Extension extension = 3;
  }
  DerivationCode derivation = 34;

  // Snapshot view of the structure
  message Snapshot {
    option (.google.fhir.proto.fhir_path_message_constraint) =
        "element.all(definition.exists() and min.exists() and max.exists())";
    option (.google.fhir.proto.fhir_path_message_constraint) =
        "(%resource.kind = 'logical' or element.first().path = %resource.type) and element.tail().all(path.startsWith(%resource.snapshot.element.first().path&'.'))";
    option (.google.fhir.proto.fhir_path_message_constraint) =
        "element.all(base.exists())";

    // Unique id for inter-element referencing
    String id = 1;

    // Additional content defined by implementations
    repeated Extension extension = 2;

    // Extensions that cannot be ignored even if unrecognized
    repeated Extension modifier_extension = 3;

    // Definition of elements in the resource (if no StructureDefinition)
    repeated ElementDefinition element = 4 [
      (.google.fhir.proto.validation_requirement) = REQUIRED_BY_FHIR,
      (.google.fhir.proto.fhir_path_constraint) =
          "binding.empty() or binding.valueSet.exists() or binding.description.exists()"
    ];
  }
  Snapshot snapshot = 35;

  // Differential view of the structure
  message Differential {
    option (.google.fhir.proto.fhir_path_message_constraint) =
        "element.where(path.contains('.').not()).slicing.empty()";
    option (.google.fhir.proto.fhir_path_message_constraint) =
        "(%resource.kind = 'logical' or element.first().path.startsWith(%resource.type)) and (element.tail().empty() or element.tail().all(path.startsWith(%resource.differential.element.first().path.replaceMatches('\\\\..*','')&'.')))";

    // Unique id for inter-element referencing
    String id = 1;

    // Additional content defined by implementations
    repeated Extension extension = 2;

    // Extensions that cannot be ignored even if unrecognized
    repeated Extension modifier_extension = 3;

    // Definition of elements in the resource (if no StructureDefinition)
    repeated ElementDefinition element = 4
        [(.google.fhir.proto.validation_requirement) = REQUIRED_BY_FHIR];
  }
  Differential differential = 36;
}
