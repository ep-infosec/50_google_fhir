//    Copyright 2019 Google Inc.
//
//    Licensed under the Apache License, Version 2.0 (the "License");
//    you may not use this file except in compliance with the License.
//    You may obtain a copy of the License at
//
//        https://www.apache.org/licenses/LICENSE-2.0
//
//    Unless required by applicable law or agreed to in writing, software
//    distributed under the License is distributed on an "AS IS" BASIS,
//    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
//    See the License for the specific language governing permissions and
//    limitations under the License.

syntax = "proto3";

package google.fhir.r4.core;

import "google/protobuf/any.proto";
import "proto/google/fhir/proto/annotations.proto";
import "proto/google/fhir/proto/r4/core/codes.proto";
import "proto/google/fhir/proto/r4/core/datatypes.proto";

option java_multiple_files = true;
option java_package = "com.google.fhir.r4.core";
option (.google.fhir.proto.fhir_version) = R4;

// Auto-generated from StructureDefinition for EpisodeOfCare.
// An association of a Patient with an Organization and  Healthcare Provider(s)
// for a period of time that the Organization assumes some level of
// responsibility. See http://hl7.org/fhir/StructureDefinition/EpisodeOfCare
message EpisodeOfCare {
  option (.google.fhir.proto.structure_definition_kind) = KIND_RESOURCE;
  option (.google.fhir.proto.fhir_structure_definition_url) =
      "http://hl7.org/fhir/StructureDefinition/EpisodeOfCare";
  option (.google.fhir.proto.search_parameter) = {
    name: "care-manager"
    type: REFERENCE
    expression: "EpisodeOfCare.careManager.where(resolve() is Practitioner)"
  };
  option (.google.fhir.proto.search_parameter) = {
    name: "condition"
    type: REFERENCE
    expression: "EpisodeOfCare.diagnosis.condition"
  };
  option (.google.fhir.proto.search_parameter) = {
    name: "date"
    type: DATE
    expression: "AllergyIntolerance.recordedDate | CarePlan.period | CareTeam.period | ClinicalImpression.date | Composition.date | Consent.dateTime | DiagnosticReport.effective | Encounter.period | EpisodeOfCare.period | FamilyMemberHistory.date | Flag.period | Immunization.occurrence | List.date | Observation.effective | Procedure.performed | (RiskAssessment.occurrence as dateTime) | SupplyRequest.authoredOn"
  };
  option (.google.fhir.proto.search_parameter) = {
    name: "identifier"
    type: TOKEN
    expression: "AllergyIntolerance.identifier | CarePlan.identifier | CareTeam.identifier | Composition.identifier | Condition.identifier | Consent.identifier | DetectedIssue.identifier | DeviceRequest.identifier | DiagnosticReport.identifier | DocumentManifest.masterIdentifier | DocumentManifest.identifier | DocumentReference.masterIdentifier | DocumentReference.identifier | Encounter.identifier | EpisodeOfCare.identifier | FamilyMemberHistory.identifier | Goal.identifier | ImagingStudy.identifier | Immunization.identifier | List.identifier | MedicationAdministration.identifier | MedicationDispense.identifier | MedicationRequest.identifier | MedicationStatement.identifier | NutritionOrder.identifier | Observation.identifier | Procedure.identifier | RiskAssessment.identifier | ServiceRequest.identifier | SupplyDelivery.identifier | SupplyRequest.identifier | VisionPrescription.identifier"
  };
  option (.google.fhir.proto.search_parameter) = {
    name: "incoming-referral"
    type: REFERENCE
    expression: "EpisodeOfCare.referralRequest"
  };
  option (.google.fhir.proto.search_parameter) = {
    name: "organization"
    type: REFERENCE
    expression: "EpisodeOfCare.managingOrganization"
  };
  option (.google.fhir.proto.search_parameter) = {
    name: "patient"
    type: REFERENCE
    expression: "AllergyIntolerance.patient | CarePlan.subject.where(resolve() is Patient) | CareTeam.subject.where(resolve() is Patient) | ClinicalImpression.subject.where(resolve() is Patient) | Composition.subject.where(resolve() is Patient) | Condition.subject.where(resolve() is Patient) | Consent.patient | DetectedIssue.patient | DeviceRequest.subject.where(resolve() is Patient) | DeviceUseStatement.subject | DiagnosticReport.subject.where(resolve() is Patient) | DocumentManifest.subject.where(resolve() is Patient) | DocumentReference.subject.where(resolve() is Patient) | Encounter.subject.where(resolve() is Patient) | EpisodeOfCare.patient | FamilyMemberHistory.patient | Flag.subject.where(resolve() is Patient) | Goal.subject.where(resolve() is Patient) | ImagingStudy.subject.where(resolve() is Patient) | Immunization.patient | List.subject.where(resolve() is Patient) | MedicationAdministration.subject.where(resolve() is Patient) | MedicationDispense.subject.where(resolve() is Patient) | MedicationRequest.subject.where(resolve() is Patient) | MedicationStatement.subject.where(resolve() is Patient) | NutritionOrder.patient | Observation.subject.where(resolve() is Patient) | Procedure.subject.where(resolve() is Patient) | RiskAssessment.subject.where(resolve() is Patient) | ServiceRequest.subject.where(resolve() is Patient) | SupplyDelivery.patient | VisionPrescription.patient"
  };
  option (.google.fhir.proto.search_parameter) = {
    name: "status"
    type: TOKEN
    expression: "EpisodeOfCare.status"
  };
  option (.google.fhir.proto.search_parameter) = {
    name: "type"
    type: TOKEN
    expression: "AllergyIntolerance.type | Composition.type | DocumentManifest.type | DocumentReference.type | Encounter.type | EpisodeOfCare.type"
  };

  // Logical id of this artifact
  Id id = 1;

  // Metadata about the resource
  Meta meta = 2;

  // A set of rules under which this content was created
  Uri implicit_rules = 3;

  // Language of the resource content
  Code language = 4;

  // Text summary of the resource, for human interpretation
  Narrative text = 5;

  // Contained, inline Resources
  repeated protobuf.Any contained = 6;

  // Field 7 reserved for strongly-typed ContainedResource for id:
  // EpisodeOfCare.contained
  reserved 7;

  // Additional content defined by implementations
  repeated Extension extension = 8;

  // Extensions that cannot be ignored
  repeated Extension modifier_extension = 9;

  // Business Identifier(s) relevant for this EpisodeOfCare
  repeated Identifier identifier = 10;

  // planned | waitlist | active | onhold | finished | cancelled |
  // entered-in-error
  message StatusCode {
    option (.google.fhir.proto.structure_definition_kind) = KIND_PRIMITIVE_TYPE;
    option (.google.fhir.proto.fhir_valueset_url) =
        "http://hl7.org/fhir/ValueSet/episode-of-care-status";
    option (.google.fhir.proto.fhir_profile_base) =
        "http://hl7.org/fhir/StructureDefinition/code";

    EpisodeOfCareStatusCode.Value value = 1;

    String id = 2;

    repeated Extension extension = 3;
  }
  StatusCode status = 11
      [(.google.fhir.proto.validation_requirement) = REQUIRED_BY_FHIR];

  // Past list of status codes (the current status may be included to cover the
  // start date of the status)
  message StatusHistory {
    // Unique id for inter-element referencing
    String id = 1;

    // Additional content defined by implementations
    repeated Extension extension = 2;

    // Extensions that cannot be ignored even if unrecognized
    repeated Extension modifier_extension = 3;

    // planned | waitlist | active | onhold | finished | cancelled |
    // entered-in-error
    message StatusCode {
      option (.google.fhir.proto.structure_definition_kind) =
          KIND_PRIMITIVE_TYPE;
      option (.google.fhir.proto.fhir_valueset_url) =
          "http://hl7.org/fhir/ValueSet/episode-of-care-status";
      option (.google.fhir.proto.fhir_profile_base) =
          "http://hl7.org/fhir/StructureDefinition/code";

      EpisodeOfCareStatusCode.Value value = 1;

      String id = 2;

      repeated Extension extension = 3;
    }
    StatusCode status = 4
        [(.google.fhir.proto.validation_requirement) = REQUIRED_BY_FHIR];

    // Duration the EpisodeOfCare was in the specified status
    Period period = 5
        [(.google.fhir.proto.validation_requirement) = REQUIRED_BY_FHIR];
  }
  repeated StatusHistory status_history = 12;

  // Type/class  - e.g. specialist referral, disease management
  repeated CodeableConcept type = 13;

  // The list of diagnosis relevant to this episode of care
  message Diagnosis {
    // Unique id for inter-element referencing
    String id = 1;

    // Additional content defined by implementations
    repeated Extension extension = 2;

    // Extensions that cannot be ignored even if unrecognized
    repeated Extension modifier_extension = 3;

    // Conditions/problems/diagnoses this episode of care is for
    Reference condition = 4 [
      (.google.fhir.proto.validation_requirement) = REQUIRED_BY_FHIR,
      (.google.fhir.proto.valid_reference_type) = "Condition"
    ];

    // Role that this diagnosis has within the episode of care (e.g. admission,
    // billing, discharge â€¦)
    CodeableConcept role = 5;

    // Ranking of the diagnosis (for each role type)
    PositiveInt rank = 6;
  }
  repeated Diagnosis diagnosis = 14;

  // The patient who is the focus of this episode of care
  Reference patient = 15 [
    (.google.fhir.proto.validation_requirement) = REQUIRED_BY_FHIR,
    (.google.fhir.proto.valid_reference_type) = "Patient"
  ];

  // Organization that assumes care
  Reference managing_organization = 16
      [(.google.fhir.proto.valid_reference_type) = "Organization"];

  // Interval during responsibility is assumed
  Period period = 17;

  // Originating Referral Request(s)
  repeated Reference referral_request = 18
      [(.google.fhir.proto.valid_reference_type) = "ServiceRequest"];

  // Care manager/care coordinator for the patient
  Reference care_manager = 19 [
    (.google.fhir.proto.valid_reference_type) = "Practitioner",
    (.google.fhir.proto.valid_reference_type) = "PractitionerRole"
  ];

  // Other practitioners facilitating this episode of care
  repeated Reference team = 20
      [(.google.fhir.proto.valid_reference_type) = "CareTeam"];

  // The set of accounts that may be used for billing for this EpisodeOfCare
  repeated Reference account = 21
      [(.google.fhir.proto.valid_reference_type) = "Account"];
}
